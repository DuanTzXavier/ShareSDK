def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "http://192.168.19.7:8081/nexus/content/repositories/releases/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "http://192.168.19.7:8081/nexus/content/repositories/snapshots/"
}

def getRepositoryUsername() {
    return hasProperty('NEXUS_USERNAME') ? NEXUS_USERNAME : "admin"
}

def getGroudID() {
    return hasProperty('GROUPID') ? GROUPID : "ctrip.wireless.android"
}

def getRepositoryPassword() {
    return hasProperty('NEXUS_PASSWORD') ? NEXUS_PASSWORD : "admin123"
}

def getArtifactId() {
    return getModuleName()
}

def isParentModule() {
    boolean isParent = false;
    def parseApkXml = (new XmlParser()).parse(new File(rootDir, 'apk_module_config.xml'))
    parseApkXml.Module.each { module ->
        if (module.@moduleName == "${project.getName()}") {
            isParent = module.@isParent
        }
    }
    return isParent
}


def getModuleName() {
    return project.getName()
}

apply plugin: 'maven-publish'

publishing {
    publications {
        maven(MavenPublication) {
            groupId getGroudID()
            artifactId getModuleName()
            if (rootProject.hasProperty('TypeBaseApk')) {
                artifact("${rootDir}/CtripMain/build/generated/source/r/release/ctrip/android/view/R.java") {
                    classifier 'R'
                    extension 'java'
                }
                artifact("${rootDir}/CtripMain/build/intermediates/transforms/proguard/release/jars/3/1f/main.jar") {
                    classifier 'JAR'
                    extension 'jar'
                }
                artifact("$buildDir/outputs/apk/${project.getName()}-release.apk") {
                    classifier 'APK'
                    extension 'apk'
                }
                artifact("$buildDir/outputs/mapping/release/mapping.txt") {
                    classifier 'MAP'
                    extension 'txt'
                }
                artifact("${rootDir}/build-outputs/AndroidManifest.xml") {
                    classifier 'MF'
                    extension 'xml'
                }
            } else if (rootProject.hasProperty('TypeModuleSO')) {
                if (isParentModule()) {
                    String path = "${project.apkName}".replace('_', '/')
                    artifact("${buildDir}/gen/r/${path}/R.java") {
                        classifier 'R'
                        extension 'java'
                    }
                    artifact("${buildDir}/intermediates/classes-obfuscated/classes-obfuscated.jar") {
                        classifier 'JAR'
                        extension 'jar'
                    }
                    artifact("${rootDir}/build-outputs/${project.apkName}.so") {
                        classifier 'SO'
                        extension 'so'
                    }
                    artifact("${rootDir}/build-outputs/${project.apkName}-mapping.txt") {
                        classifier 'MAP'
                        extension 'txt'
                    }
                    artifact("${buildDir}/intermediates/res/resources.zip") {
                        classifier 'RES'
                        extension 'zip'
                    }
                } else {
                    if (!project.getName().equals("CTBusiness") && !project.getName().equals("CtripMain")) {
                        if (project.getName().equals("CTTranslator")) {
                            artifact("${rootDir}/build-outputs/remoteApk/${project.apkName}.so") {
                                classifier 'SO'
                                extension 'so'
                            }
                            artifact("${rootDir}/build-outputs/${project.apkName}-mapping.txt") {
                                classifier 'MAP'
                                extension 'txt'
                            }
                        } else {
                            artifact("${rootDir}/build-outputs/${project.apkName}.so") {
                                classifier 'SO'
                                extension 'so'
                            }
                            artifact("${rootDir}/build-outputs/${project.apkName}-mapping.txt") {
                                classifier 'MAP'
                                extension 'txt'
                            }
                        }
                    }
                }

            } else if (rootProject.hasProperty('TypeAAR')) {
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar") {
                    classifier 'AAR'
                    extension 'aar'
                }
                artifact("${buildDir}/intermediates/bundles/release/R.txt") {
                    classifier 'R'
                    extension 'txt'
                }
            } else {
                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar") {
                    classifier 'AAR'
                    extension 'aar'
                }
            }
        }

        if (rootProject.hasProperty('TypeBaseApk')) {
            CTBusiness(MavenPublication) {
                groupId getGroudID()
                if (rootProject.hasProperty('TypeBaseApk')) {
                    artifactId "CTBusiness"
                    //CTBusiness.AAR
                    artifact("${rootDir}/CTLibs/CTBusiness/build/outputs/aar/CTBusiness-release.aar") {
                        classifier 'AAR'
                        extension 'aar'
                    }
                    artifact("${rootDir}/CTLibs/CTBusiness/build/intermediates/bundles/release/R.txt") {
                        classifier 'R'
                        extension 'txt'
                    }
                }
            }
            CTPersonInfo(MavenPublication) {
                groupId getGroudID()
                if (rootProject.hasProperty('TypeBaseApk')) {
                    artifactId "CTPersonInfo"
                    //CTPersonInfo.AAR
                    artifact("${rootDir}/CTPersonInfo/build/outputs/aar/CTPersonInfo-release.aar") {
                        classifier 'AAR'
                        extension 'aar'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            credentials {
                username getRepositoryUsername()
                password getRepositoryPassword()
            }

            if (project.version.endsWith('-SNAPSHOT')) {
                url getSnapshotRepositoryUrl()
            } else {
                url getReleaseRepositoryUrl()
            }
        }
    }
}


task uploadAAR(dependsOn: ['build', 'publish']) {
    doLast {
        checkUpdate("$versionPath", "$TypeAAR", "$buildDir")
    }

}
//task uploadModuleSO(dependsOn: ['bundleRelease', 'publish'])

